@model CreateBookViewModel
<h1>Create Book</h1>
<form method="post" asp-controller="UserRoles" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-4">
            <h4>Create a new book.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BookName"></label>
                <input asp-for="BookName" class="form-control" />
                <span asp-validation-for="BookName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Author"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="input-group ">
                <input asp-for="Genre" name='genre' class='radius textbody'>
            </div>
            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Year"></label>
                <input asp-for="Year" class="form-control" />
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Articl"></label>
                <input asp-for="Articl" class="form-control" />
                <span asp-validation-for="Articl" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary" asp-action="CreateB">Create</button>
        </div>
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BookPicture" style="width: 100%;"></label>
                @if (Model.BookPicture != null)
                {
                    <img id="profilePicture" style="width:250px;height:350px; object-fit:cover" src="@Model.BookPicture">
                }
                else
                {
                    <img id="profilePicture" style="width:250px;height:350px; object-fit:cover" src="">
                }
                <input type="file"
                       accept=".png,.jpg,.jpeg,.gif,.tif"
                       name="file"
                       class="form-control"
                       style="border:0px!important;padding: 0px;padding-top: 10px;padding-bottom: 30px;"
                       onchange="document.getElementById('profilePicture').src = window.URL.createObjectURL(this.files[0])" />
                <span asp-validation-for="BookPicture" class="text-danger"></span>
            </div>
        </div>

        <div class="d-flex flex-column">
            <button class="btn btn-primary" type="button" onclick="addChapter()">Add chapter</button>
            <div id="chapter-container" class="d-flex flex-column">
            </div>
        </div>
    </div>
</form>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/tagify/tagify.min.js"></script>
<script>
    var genres = [];
    var inputG = document.querySelector('input[name=genre]');
    async function loadGenre() {
        var responseGenre = await fetch('@Url.Action("GetGenre","UserRoles")');
        genres = await responseGenre.json();
        // init Tagify script on the above inputs
        console.log(genres);
        var tagify = new Tagify(inputG, {
            whitelist: genres.map(function (item) { return item.genreName; }),
            enforceWhitelist: true,
            dropdown: {
                position: "input",
                enabled: 0 // always opens dropdown when input gets focus
            }
        })
    }
    loadGenre();

    function addChapter() {
        $('#chapter-container').append(`
        <div class="d-flex mt-2 mb-2 justify-content-between">
            <input class="form-control" type="text" name="chapters" value=""/>
            <button class="btn btn-primary" type="button" onclick="delChapter(this)">X</button>
            <button class="btn btn-primary" type="button" onclick="moveUp(this)">↑</button>
            <button class="btn btn-primary" type="button" onclick="moveDown(this)">↓</button>
        </div>
        `);
    }
    function delChapter(e) {
        e.parentElement.remove();
    }
    function moveUp(element) {
        element = element.parentElement;
        if (element.previousElementSibling)
            element.parentNode.insertBefore(element, element.previousElementSibling);
    }
    function moveDown(element) {
        element = element.parentElement;
        if (element.nextElementSibling)
            element.parentNode.insertBefore(element.nextElementSibling, element);
    }
</script>